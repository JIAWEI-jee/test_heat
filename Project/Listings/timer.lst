C51 COMPILER V9.56.0.0   TIMER                                                             09/07/2020 19:35:38 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\timer.obj
COMPILER INVOKED BY: C:\program_list\keil\C51\BIN\C51.EXE ..\hardware\Timer\timer.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDI
                    -R(..\hardware\DELAY;..\hardware\ADC;..\hardware\Flash;..\hardware\Uart;..\hardware\Key;..\hardware\Pwm;..\hardware\WDT;.
                    -.\hardware\Timer;..\hardware\LCDdisplay;..\hardware\PID) DEBUG OBJECTEXTEND PRINT(.\Listings\timer.lst) TABS(2) OBJECT(.
                    -\Objects\timer.obj)

line level    source

   1          #include "timer.h"
   2          #include "flash.h"
   3          #include "uart.h"
   4          #include "lcddisplay.h"
   5          #include "key.h"
   6          #include "adc.h"
   7          #include "pwm.h"
   8          #include "PID.h"
   9          //----------------time---------------
  10          u16 time_cnt = 0;
  11          u16 time_sec = 0;
  12          u16 cnt_heat_time = 0;
  13          u8 over_rang_time_std = 0;
  14          u8 Gap_protect_std = 0 ;
  15          u8 On_stay = 0 , pwm_cnt = 0;
  16          
  17          u8 Heat_start_std = 0;
  18          u16 time_heat = 0;
  19          u16 temp_time = 0 ,cail_cnt = 0 ;
  20          u8  heat_step = 0;
  21          u16 pwm_jishu = 0;
  22          
  23          //void Controll_Heat ( void )
  24          //{
  25          //  //gm_printf ( " spid.iPriVal = %d \r\n",  spid.iPriVal);
  26          //  u8 heat_step_val = 100;
  27          //  if (Input_Voltage_std == V_24_status)
  28          //    {
  29          //          spid.iPriVal = spid.iPriVal/2;   
  30          //          heat_step_val = 50;
  31          //      }
  32          //  if (heat_step == 1)
  33          //    {
  34          //      set_pwm (heat_step_val);
  35          //    }
  36          //  else if (heat_step == 0)
  37          //    
  38          //    {
  39          //       set_pwm ((u8) spid.iPriVal);  //(u8) spid.iPriVal
  40          //    }
  41          //}
  42          
  43          
  44          void Heat_Operation ( u16 temp )
  45          {
  46   1        if(get_device_state() == ON)
  47   1        {
  48   2          if (Input_Voltage_std == V_24_status)
  49   2          {
  50   3                 temp =  (temp/2) ;   
  51   3           }
  52   2      //    else
C51 COMPILER V9.56.0.0   TIMER                                                             09/07/2020 19:35:38 PAGE 2   

  53   2      //    {
  54   2      //       temp = temp; 
  55   2      //    }
  56   2          pwm_jishu++;
  57   2          if ( temp > pwm_jishu )
  58   2          {
  59   3            set_pwm ( 100 );
  60   3      
  61   3          }
  62   2          else
  63   2          {
  64   3            set_pwm ( 0 );
  65   3      
  66   3          }
  67   2          if ( pwm_jishu == pwm_count )
  68   2          {
  69   3            pwm_jishu =0;
  70   3          }
  71   2        } 
  72   1      }
  73          
  74          
  75          void set_time_sec_val ( u16 sec )
  76          {
  77   1        time_sec = sec;
  78   1        time_cnt = 0;
  79   1        gm_printf ( "set time second:%d\r\n",sec );
  80   1      }
  81          
  82          
  83          static void set_heat_val ( void )
  84          {
  85   1        if ( Heat_start_std == 1 )
  86   1        {
  87   2          if ( ++time_heat > Heat_Value )
  88   2          {
  89   3            //KEY_printf ( "exchange_heat_value \r\n" );
  90   3            Heat_start_std = 0;
  91   3            time_heat = 0;
  92   3      
  93   3             heat_step = 0;
  94   3          }
  95   2        }
  96   1      }
  97          
  98          void set_time_sec ( void )
  99          {
 100   1        time_cnt = 0;
 101   1        if ( flash_info.timer == TIMER_ON )
 102   1        {
 103   2          time_sec = 0;
 104   2          cnt_heat_time = 0;
 105   2          temp_time = 0;
 106   2        }
 107   1        else if ( flash_info.timer == TIMER_0_5H )
 108   1        {
 109   2          time_sec = 30*60;
 110   2          cnt_heat_time = 0;
 111   2          temp_time = 0;
 112   2        }
 113   1        else if ( flash_info.timer == TIMER_1H )
 114   1        {
C51 COMPILER V9.56.0.0   TIMER                                                             09/07/2020 19:35:38 PAGE 3   

 115   2          time_sec = 60*60;
 116   2          cnt_heat_time = 0;
 117   2          temp_time = 0;
 118   2        }
 119   1        else if ( flash_info.timer == TIMER_2H )
 120   1        {
 121   2          time_sec = 2*60*60;
 122   2          cnt_heat_time = 0;
 123   2          temp_time = 0;
 124   2        }
 125   1        else if ( flash_info.timer == TIMER_4H )
 126   1        {
 127   2          time_sec = 4*60*60;
 128   2          cnt_heat_time = 0;
 129   2          temp_time = 0;
 130   2        }
 131   1        else if ( flash_info.timer == TIMER_8H )
 132   1        {
 133   2          time_sec = 8*60*60;
 134   2          cnt_heat_time = 0;
 135   2          temp_time = 0;
 136   2        }
 137   1        gm_printf ( "time second:%d \r\n",time_sec );
 138   1      }
 139          
 140          
 141          void time0_init ( void )
 142          {
 143   1        /**********************************TIM0配置初始化**************************************/
 144   1        TCON1 = 0x00;           //Tx0定时器时钟为Fosc/12
 145   1        TMOD = 0x00;            //16位重装载定时器/计数器
 146   1      
 147   1        //Tim0计算时间  = (65536 - 0xFACB) * (1 / (Fosc /Timer分频系数))
 148   1        //        = 1333 / (16000000 / 12)
 149   1        //        = 1 ms
 150   1      
 151   1        //定时1ms
 152   1        //反推初值  = 65536 - ((1/1000) / (1/(Fosc / Timer分频系数)))
 153   1        //        = 65536 - ((1/1000) / (1/(16000000 / 12)))
 154   1        //      = 65536 - 1333
 155   1        //      = 0xFACB
 156   1      //    TH0 = 0xCB;  10ms
 157   1      //  TL0 = 0xEB;
 158   1        TH0 = 0xF5;
 159   1        TL0 = 0x96;             //T0定时时间2ms     0x96     10ms   0xFB
 160   1        IE |= 0x02;             //打开T0中断
 161   1        TCON |= 0x10;           //使能T0
 162   1      }
 163          
 164          
 165          
 166          //10ms
 167          void TIMER0_Rpt ( void ) interrupt TIMER0_VECTOR
 168          {
 169   1        if ( get_device_state() == ON ) //flash_info.timer != TIMER_ON &&
 170   1        {
 171   2          time_cnt++;
 172   2          if ( time_cnt >= 500 )
 173   2          {
 174   3            set_heat_val();
 175   3      
 176   3            if ( On_stay == 2 )  // stay on 模式下进行保护
C51 COMPILER V9.56.0.0   TIMER                                                             09/07/2020 19:35:38 PAGE 4   

 177   3            {
 178   4              cnt_heat_time++;
 179   4              if ( cnt_heat_time > overrang_time )
 180   4              {
 181   5                On_stay = 0;
 182   5                cnt_heat_time = 0;
 183   5                over_rang_time_std = 1;
 184   5                //gm_printf ( "On_stay_overrang \r\n" );
 185   5              }
 186   4      
 187   4            }
 188   3            if ( time_sec > 0 )
 189   3            {
 190   4      
 191   4              time_sec--;
 192   4              if ( Gap_protect_std == 2 )
 193   4              {
 194   5      
 195   5                cnt_heat_time++;
 196   5      
 197   5      
 198   5                if ( cnt_heat_time > overrang_time )
 199   5                {
 200   6                  over_rang_time_std = 1;
 201   6                  Gap_protect_std = 0;
 202   6                  cnt_heat_time = 0;
 203   6                  //gm_printf ( "protect \r\n" );
 204   6                }
 205   5              }
 206   4            }
 207   3            else
 208   3            {
 209   4              if ( flash_info.timer != TIMER_ON )
 210   4              {
 211   5                set_device_state ( OFF );
 212   5                time_sec = 0;
 213   5                cnt_heat_time = 0;
 214   5                Gap_protect_std = 0;
 215   5                On_stay = 0;
 216   5                //ht1621_all_clear(); //定时时间到
 217   5                gm_printf ( "time off \r\n" );
 218   5              }
 219   4            }
 220   3            //  gm_printf("time_sec=%d \r\n",time_sec);
 221   3            time_cnt = 0;
 222   3          }
 223   2      
 224   2      //      Heat_Operation ( 500 );
 225   2          
 226   2        }
 227   1        else if (calibration_std == 1)
 228   1        {
 229   2          if (++cail_cnt > cail_value)
 230   2          {
 231   3            calibration_std = 0;
 232   3            cail_cnt = 0;
 233   3            
 234   3          }
 235   2        }
 236   1        LCD_Display();
 237   1        
 238   1      }
C51 COMPILER V9.56.0.0   TIMER                                                             09/07/2020 19:35:38 PAGE 5   

 239          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    656    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =     20       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
